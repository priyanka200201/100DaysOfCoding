Question: Given an integer array nums sorted in non-decreasing order,
remove the duplicates in-place such that each unique element appears only once.
 The relative order of the elements should be kept the same.


Do not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.
 

Test Case 1:

Input: nums = [1,1,2]
Output: 2, nums = [1,2,_]
Explanation: The function should return k = 2, with the first two elements of nums being 1 and 2 respectively.
It does not matter what we leave beyond the returned k (hence they are underscores).

Test Case 2:

Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]
Explanation: The function should return k = 5, with the first five elements of nums being 0, 1, 2, 3, and 4 respectively.

Test Case 3:

Input: nums=[1,2,3]
Output: No duplicate elements present
 
 Test Case 4:
 Input: nums={};
 Output: Array is null, no operations can be performed.

Constraints:

1 <= nums.length <= 3 * 104
-100 <= nums[i] <= 100
nums is sorted in non-decreasing order.